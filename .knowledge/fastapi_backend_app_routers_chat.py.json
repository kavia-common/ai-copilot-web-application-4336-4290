{"is_source_file": true, "format": "Python", "description": "This is a FastAPI router module defining API endpoints for managing conversations and messages in a chat application. It includes routes for listing, creating, retrieving, deleting conversations, and sending messages (including streaming responses with SSE). The code interacts with database models via SQLAlchemy and integrates with an OpenAI service for generating assistant replies.", "external_files": ["../db", "../models", "../schemas", "../services/openai_client", "../config"], "external_methods": ["get_db", "get_settings", "OpenAIService.complete"], "published": ["list_conversations", "create_conversation", "get_conversation", "delete_conversation", "send_message"], "classes": [], "methods": [{"name": "Dict _conversation_to_read(conv: Conversation, include_messages: bool = False)", "description": "Converts a Conversation model instance into a dictionary suitable for response, optionally including messages.", "scope": "", "scopeKind": ""}, {"name": "list_conversations(db: Session = Depends(get_db))", "description": "Handles GET requests to list all conversations ordered by creation date.", "scope": "", "scopeKind": ""}, {"name": "create_conversation(payload: ConversationCreate, db: Session = Depends(get_db))", "description": "Handles POST requests to create a new conversation with an optional title.", "scope": "", "scopeKind": ""}, {"name": "get_conversation(conversation_id: int, db: Session = Depends(get_db))", "description": "Handles GET requests to retrieve a specific conversation along with its messages.", "scope": "", "scopeKind": ""}, {"name": "delete_conversation(conversation_id: int, db: Session = Depends(get_db))", "description": "Handles DELETE requests to remove a specific conversation and its messages.", "scope": "", "scopeKind": ""}, {"name": "send_message( conversation_id: int, payload: Dict, request: Request, db: Session = Depends(get_db), )", "description": "Handles POST requests to send a message in a conversation. Supports streaming responses via Server-Sent Events.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[bytes,None] event_generator()", "scope": "send_message", "scopeKind": "function", "description": "unavailable"}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "get_settings", "OpenAIService.complete", "request.is_disconnected"], "search-terms": ["FastAPI conversations endpoints", "StreamingResponse chat", "SSE chat messages", "Conversation CRUD API", "chat API route"], "state": 2, "file_id": 24, "knowledge_revision": 53, "git_revision": "", "ctags": [{"_type": "tag", "name": "_conversation_to_read", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^def _conversation_to_read(conv: Conversation, include_messages: bool = False) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(conv: Conversation, include_messages: bool = False)"}, {"_type": "tag", "name": "create_conversation", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^def create_conversation(payload: ConversationCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: ConversationCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_conversation", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^def delete_conversation(conversation_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(conversation_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "event_generator", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^    async def event_generator() -> AsyncGenerator[bytes, None]:$/", "file": true, "language": "Python", "typeref": "typename:AsyncGenerator[bytes,None]", "kind": "function", "signature": "()", "scope": "send_message", "scopeKind": "function"}, {"_type": "tag", "name": "get_conversation", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^def get_conversation(conversation_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(conversation_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_conversations", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^def list_conversations(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^router = APIRouter(prefix=\"\", tags=[\"Conversations\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "send_message", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/routers/chat.py", "pattern": "/^async def send_message($/", "language": "Python", "kind": "function", "signature": "( conversation_id: int, payload: Dict, request: Request, db: Session = Depends(get_db), )"}], "hash": "848e52efbb580bfd7134a02ca9f291a9", "format-version": 4, "code-base-name": "react_js_frontend", "filename": "fastapi_backend/app/routers/chat.py", "fields": [{"name": "router = APIRouter(prefix=\"\", tags=[\"Conversations\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"53": ""}]}