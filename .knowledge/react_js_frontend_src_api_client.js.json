{"is_source_file": true, "format": "JavaScript", "description": "This file defines client-side API utility functions for interacting with a backend service, including fetching conversations, creating/deleting conversations, retrieving conversation details, and sending messages with optional streaming support using fetch API.", "external_files": ["fetch", "window", "process.env"], "external_methods": ["fetch"], "published": ["getBackendUrl", "listConversations", "createConversation", "deleteConversation", "getConversation", "sendMessage"], "classes": [], "methods": [{"name": "getBackendUrl()", "description": "Retrieves the backend API URL from environment variable or window location as fallback.", "scope": "", "scopeKind": ""}, {"name": "jsonFetch(path, options = {})", "description": "Performs a JSON fetch with error handling, returning parsed JSON or throwing an error on failure.", "scope": "", "scopeKind": ""}, {"name": "streamFetch(path, { method = \"POST\", body, headers = {}, onToken, onDone, onError })", "description": "Performs a fetch request with streaming support for server-sent events, calling callbacks on token received, completion, or error.", "scope": "", "scopeKind": ""}, {"name": "listConversations()", "description": "Fetches a list of conversations from the backend.", "scope": "", "scopeKind": ""}, {"name": "createConversation(title)", "description": "Creates a new conversation with an optional title.", "scope": "", "scopeKind": ""}, {"name": "deleteConversation(id)", "description": "Deletes a specified conversation by ID.", "scope": "", "scopeKind": ""}, {"name": "getConversation(id)", "description": "Fetches details of a specific conversation, including messages.", "scope": "", "scopeKind": ""}, {"name": "sendMessage({ id, content, stream = false, onToken, onDone, onError })", "description": "Sends a message within a conversation, supporting both streaming and non-streaming modes, invoking callbacks for partial tokens and completion when streaming.", "scope": "", "scopeKind": ""}], "calls": ["getBackendUrl", "jsonFetch", "streamFetch", "listConversations", "createConversation", "deleteConversation", "getConversation", "streamFetch", "jsonFetch"], "search-terms": ["client-side API", "fetch with streaming", "conversations API", "send message", "streaming fetch", "react app API", "backend URL env"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "createConversation", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^export async function createConversation(title) {$/", "language": "JavaScript", "kind": "function", "signature": "(title)"}, {"_type": "tag", "name": "deleteConversation", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^export async function deleteConversation(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "getBackendUrl", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^export function getBackendUrl() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getConversation", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^export async function getConversation(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "jsonFetch", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^async function jsonFetch(path, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {})"}, {"_type": "tag", "name": "listConversations", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^export async function listConversations() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "sendMessage", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^export async function sendMessage({ id, content, stream = false, onToken, onDone, onError }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ id, content, stream = false, onToken, onDone, onError })"}, {"_type": "tag", "name": "streamFetch", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/react_js_frontend/src/api/client.js", "pattern": "/^async function streamFetch(path, { method = \"POST\", body, headers = {}, onToken, onDone, onError/", "language": "JavaScript", "kind": "function", "signature": "(path, { method = \"POST\", body, headers = {}, onToken, onDone, onError })"}], "hash": "1572f82ba983d57b5e1484db7ecfac2f", "format-version": 4, "code-base-name": "react_js_frontend", "filename": "react_js_frontend/src/api/client.js", "revision_history": [{"27": ""}]}