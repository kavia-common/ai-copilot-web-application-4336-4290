{"is_source_file": true, "format": "Python", "description": "This file defines the OpenAIService class, which provides a wrapper around OpenAI's chat completion API, supporting both full and streaming responses, meant for integration within the FastAPI backend of an application.", "external_files": ["..config"], "external_methods": ["get_settings"], "published": ["OpenAIService"], "classes": [{"name": "OpenAIService", "description": "A service class that interacts with OpenAI's API to generate chat completions, supporting both synchronous and streaming modes."}], "methods": [{"name": "__init__(self, api_key: Optional[str] = None, model: Optional[str] = None)", "description": "Initializes the OpenAIService with API key and model, fetching settings if not provided.", "scope": "OpenAIService", "scopeKind": "class"}, {"name": "Union[str,AsyncGenerator[str,None]] complete( self, messages: List[Dict[str, str]], stream: bool = False, temperature: float = 0.2, max_tokens: Optional[int] = None, )", "description": "Creates a chat completion using OpenAI, supporting optional streaming of partial results.", "scope": "OpenAIService", "scopeKind": "class"}, {"name": "AsyncGenerator[str,None] gen()", "scope": "OpenAIService.complete", "scopeKind": "member", "description": "unavailable"}], "calls": ["self.client.chat.completions.create"], "search-terms": ["openai", "AsyncOpenAI", "chat completions", "streaming responses", "OpenAI API wrapper", "FastAPI backend"], "state": 2, "file_id": 23, "knowledge_revision": 51, "git_revision": "", "ctags": [{"_type": "tag", "name": "OpenAIService", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/services/openai_client.py", "pattern": "/^class OpenAIService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/services/openai_client.py", "pattern": "/^    def __init__(self, api_key: Optional[str] = None, model: Optional[str] = None):$/", "language": "Python", "kind": "member", "signature": "(self, api_key: Optional[str] = None, model: Optional[str] = None)", "scope": "OpenAIService", "scopeKind": "class"}, {"_type": "tag", "name": "complete", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/services/openai_client.py", "pattern": "/^    async def complete($/", "language": "Python", "typeref": "typename:Union[str,AsyncGenerator[str,None]]", "kind": "member", "signature": "( self, messages: List[Dict[str, str]], stream: bool = False, temperature: float = 0.2, max_tokens: Optional[int] = None, )", "scope": "OpenAIService", "scopeKind": "class"}, {"_type": "tag", "name": "gen", "path": "/home/kavia/workspace/code-generation/ai-copilot-web-application-4336-4290/fastapi_backend/app/services/openai_client.py", "pattern": "/^        async def gen() -> AsyncGenerator[str, None]:$/", "file": true, "language": "Python", "typeref": "typename:AsyncGenerator[str,None]", "kind": "function", "signature": "()", "scope": "OpenAIService.complete", "scopeKind": "member"}], "hash": "cd4cc399dea1d084f8ac257594ed66f1", "format-version": 4, "code-base-name": "react_js_frontend", "filename": "fastapi_backend/app/services/openai_client.py", "revision_history": [{"51": ""}]}